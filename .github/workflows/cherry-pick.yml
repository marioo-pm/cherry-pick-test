name: Auto Cherry-Pick with PR

on:
  pull_request:
    types: [labeled]

jobs:
  cherry-pick:
    runs-on: ubuntu-latest
    if: contains(github.event.label.name, 'cherry-pick')  # Only run when the 'cherry-pick' label is applied

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch all branches
        run: git fetch --all

      - name: Create a new branch for cherry-pick
        run: |
          # Define the target branch and new branch name
          TARGET_BRANCH="target-branch"
          NEW_BRANCH="cherry-pick-${{ github.event.pull_request.number }}-$(date +%s)"  # Unique branch name

          # Checkout the target branch and create a new branch
          git checkout $TARGET_BRANCH
          git checkout -b $NEW_BRANCH

          # Cherry-pick the PR's head commit
          git cherry-pick ${{ github.event.pull_request.head.sha }}

      - name: Push the new branch to the remote repository
        run: |
          # Push the new branch with the cherry-picked commit
          git push origin $NEW_BRANCH

      - name: Create a pull request for the cherry-picked commit
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: $TARGET_BRANCH          # The branch where the cherry-pick commit will be merged (target branch)
          head: $NEW_BRANCH             # The branch with the cherry-picked commit
          title: "Cherry-pick from PR #${{ github.event.pull_request.number }}"
          body: "This pull request cherry-picks commit from PR #${{ github.event.pull_request.number }} to branch $TARGET_BRANCH."
          draft: false                  # Create a regular PR (not a draft)
